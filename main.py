

# 1. Identify a hot topic in climate change
#   a. carbon emission; climate crisis
#   b. mentioned in presentation

# 2. Use a Newspaper API to retrieve 20 search outcomes
# TODO: retrieve 20 search results using an API request
# TODO: parse <body> data from JSON response
# TODO: store each of the results in /documents/news-articles/ as .txt files
# TODO: retrieve the html of each page and "scrape" the comment section text
# TODO: store (at least) 5 comments of the results in /documents/comments/ as .txt files
# - Total generated docs = 20 + (20 * 5) = 120 docs

# 3. Check the overlapping extent (similarities) between news_article_doc and comments_doc
# TODO: preprocessing => stopword removal
# TODO: preprocessing => stemming
# TODO: * preprocessing => lemmatizing
# TODO: * preprocessing => tokenization
# TODO: generate a histogram of the most frequent words (excluding stopwords) of each news_article_doc & their comments_doc
# TODO: calculate the Jacquard index between news_article_doc and comments_doc

# 4. Identify the topics of the news_article_doc and its comments_doc using the LDA model
#  - LDA model: 3 topics, 5 words per topic
# TODO: create a list of words generated by LDA for news_article_doc [L1]
# TODO: create a list of words generated by LDA for comments_doc [L2]
# TODO: calculate the Jacquard index between L1 and L2

# 5. Perform Sentiment Analysis on each news_article_doc and its comments_doc
# TODO: use SentiStrength to calculate the vector positive & negative sentiment for each news_article_doc [senti_news_doc]
# TODO: use SentiStrength to calculate the vector positive & negative sentiment for each comments_doc [senti_comments_doc]
# TODO: calculate the Pearson correlation between each senti_news_doc & their senti_comments_doc

# 6. Evaluate the agreement/disagreement extent for each comments_doc
# TODO: get a list of Negative Emotion Wordings from any corpus (e.g. Empath)
# TODO: identify the entity that the Negative Sentiment Word (if any) is associated to, using a Parser Tree
# TODO: generate a histogram of these entities (across all the comments_docs of a news_article_doc)

# 7. Investigate the behaviour of user comments (across all the comments_docs of a news_article_doc)
# TODO: create a list of agreement words [list_agree]
# TODO: create a list of disagreement words [list_disagree]
# TODO: count the occurrences of all agreement-related words in all the comments_docs of a news_article_doc [cnt_agr]
# TODO: count the occurrences of all disagreement-related words in all the comments_docs of a news_article_doc [cnt_dis]
# TODO: generate a histogram of the cnt_agr & cnt_dis

# 8. Create a GUI to demonstrate tasks 3-7 (maybe 2)
# TODO: design GUI with Figma
# TODO: export Figma GUI with Tkinter*